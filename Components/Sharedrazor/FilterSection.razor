@using DangDucThuanFinalYear.HotelDTO

@inject AuthenticationStateProvider AuthStateProvider
@inject IRoomServices RoomsService
@inject IUserService UsersService
@inject IBookingServices BookingServices
@inject IMailServices MailsServices
@inject IPaymentServices PaymentsServices
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject IRoomTypeService RoomsTypeService

<EditForm Model="Model" Enhance FormName="filter_form" OnSubmit="HandleFilter">
    <div class="container-fluid booking pb-5 wow fadeIn" data-wow-delay="0.1s">
        <div class="container">
            <div class="bg-white shadow" style="padding: 35px;">
                <div class="row g-2">
                    <div class="col-md-10">
                        <div class="row g-2">
                            <div class="col-md-3">
                                <div class="date" id="date1" data-target-input="nearest">
                                     <InputText @bind-Value="Model.Name"  class="form-control "
                                                placeholder="Name RoomType" data-target="name" />
                                </div>
                            </div>
                          @*   <div class="col-md-3">
                                <div class="date" id="date2" data-target-input="nearest">
                                     <InputDate @bind-Value="Model.CheckOutDate" class="form-control datetimepicker-input"
                                                placeholder="Check out" data-target="#date2" data-toggle="datetimepicker" />

                                     
                                </div>
                            </div> *@
                            <div class="col-md-3">
                                 <InputSelect @bind-Value="Model.Audlts" class="form-select">
                                     @for(int i= 1;i<=6;i++)
                                    {
                                        <option value="@i">@i Adult(s)</option>
                                    }
                                </InputSelect>
                                    
                             
                            </div>
                            <div class="col-md-3">
                                <InputSelect @bind-Value="Model.Children" class="form-select">
                                    @for (int i = 1; i <= 6; i++)
                                    {
                                        <option value="@i">@i @(i > 1 ? "Children" : "Child")</option>
                                    }
                                </InputSelect>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2" style="margin-left: -251px;">
                        <button class="btn btn-primary w-100">Search</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</EditForm>

@code {
    [SupplyParameterFromForm(FormName = "filter_form")]
    public FilterModel Model { get; set; } = new();

    [SupplyParameterFromQuery]
    public DateOnly? CheckInDate { get; set; } 
    [SupplyParameterFromQuery]
    public string? Name { get; set; }

    [SupplyParameterFromQuery]

    public DateOnly? CheckOutDate { get; set; } 
    [SupplyParameterFromQuery]

    public int? Audlts { get; set; } = 0;
    [SupplyParameterFromQuery]

    public int? Children { get; set; } = 0;

    [CascadingParameter]
    public HttpContext HttpContext { get; set; } = default;

    protected override void OnInitialized()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            Model.Name = Name;
            // Model.CheckOutDate = CheckOutDate;
            Model.Audlts = Audlts;
            Model.Children = Children;

        }
    }
    public void HandleFilter()
    {
        var roompageUri = NavigationManager.GetUriWithQueryParameters("/room", Model.ToDictionary());
        NavigationManager.NavigateTo(roompageUri);
    }

}
