@page "/staff-admin/manage-room-types/{RoomTypeId:int?}/rooms"
@layout AddminStaff

@using DangDucThuanFinalYear.Data.Entities

@attribute [StreamRendering]
@rendermode @(new InteractiveServerRenderMode(prerender: false)) 
 

@inject NavigationManager NavigationManager
@inject IRoomTypeService RoomTypeService
@inject IJSRuntime JsRuntime

@* <div class="container">

    <div class="d-flex flex-column align-items-center" style="margin-top: 0px">
        <h1 style="color: green; display: flex; align-items: center; font-size: 1.5rem;">
            <NavLink href="staff-admin/manage-room-types" class="me-2 btn btn-sm btn-default">  
                <i class="fas fa-arrow-left"></i>
            </NavLink>

            <span style="display: inline-flex; align-items: center;">
                <span style="margin-right: 5px;">Manage Rooms</span>
                <small style="color: red; font-weight: bold;">[@Name]</small>
            </span>
        </h1>


        <button type="button" @onclick="()=> _showCreateRoomDialog=true" class="btn btn-sm btn-success mt-3">+ Add new Rooms</button>
    </div>

    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Room Number</th>
                    <th>Is Availabe</th>
                    <th></th>

                </tr>
            </thead>
            <tbody>
                @if(_rooms.Length == 0)
                {
                    <tr>
                        <td colspan="3">
                            <h1 class="text-danger"> No rooms </h1>

                        </td>
                    </tr>
                }
                @foreach(var room in _rooms)
                {
                    <tr>
                        <td>
                            @if (room.IsAvaiable == true)
                            {
                                <span class="text-success">
                                    @room.RoomNumber
                                </span>
                            }
                            else
                            {
                                <span class="text-danger" style="text-decoration: line-through;">
                                    @room.RoomNumber
                                </span>
                            }

                        </td>
                        <td>
                            <lable>
                                @if (room.IsAvaiable == true)
                                {
                                    <input type="checkbox" checked @onchange="()=> HandleInheritability(room)" />
                                    <span class="text-success">Yes</span>
                                }
                                else
                                {
                                    <input type="checkbox" @onchange="()=> HandleInheritability(room)" />
                                    <span class="text-danger">No</span>
                                }

                            </lable>
                         
                        </td>
                        <td>
                            <button type="button" class="btn btn-sm btn-danger" @onclick="()=> DeleteAsnyc(room.Id)">
                                <i class="fa fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        
    </div>
</div> *@
    <div class="container">
        <div class="d-flex flex-column align-items-center" style="margin-top: 0px">
            <h1 style="color: green; display: flex; align-items: center; font-size: 1.5rem;">
                <NavLink href="staff-admin/manage-room-types" class="me-2 btn btn-sm btn-default">
                    <i class="fas fa-arrow-left"></i>
                </NavLink>

                <span style="display: inline-flex; align-items: center;">
                    <span style="margin-right: 5px;">Manage Rooms</span>
                    <small style="color: red; font-weight: bold;">[@Name]</small>
                </span>
            </h1>

            <button type="button" @onclick="()=> _showCreateRoomDialog=true" class="btn btn-sm btn-success mt-3">+ Add new Rooms</button>
        </div>

        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Room Number</th>
                        <th>Is Available</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (_rooms.Length == 0)
                    {
                        <tr>
                            <td colspan="3">
                                <h1 class="text-danger"> No rooms </h1>
                            </td>
                        </tr>
                    }
                    @foreach (var room in _rooms)
                    {
                        <tr>
                            <td>
                                @if (room.IsAvaiable == true)
                                {
                                    <span class="text-success">
                                        @room.RoomNumber
                                    </span>
                                }
                                else
                                {
                                    <span class="text-danger" style="text-decoration: line-through;">
                                        @room.RoomNumber
                                    </span>
                                }
                            </td>
                            <td>
                                <label>
                                    @if (room.IsAvaiable == true)
                                    {
                                        <input type="checkbox" checked @onchange="()=> HandleInheritability(room)" />
                                        <span class="text-success">Yes</span>
                                    }
                                    else
                                    {
                                        <input type="checkbox" @onchange="()=> HandleInheritability(room)" />
                                        <span class="text-danger">No</span>
                                    }
                                </label>
                            </td>
                            <td>
                                <button type="button" class="btn btn-sm btn-danger" @onclick="()=> DeleteAsnyc(room.Id)">
                                    <i class="fa fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>


<DialogCompanent Title="Create Room" DialogId="@DialogId" Show="_showCreateRoomDialog" OnCloseModal="()=> _showCreateRoomDialog=false">
    <EditForm Model="ModelRoom" OnSubmit="CreateRoomAsync">
        <DataAnnotationsValidator/>
            <div class="mb-3">
                <label class="form-label">Room Number: </label>
                <InputText @bind-Value="ModelRoom.RoomNumber" class="form-control form-control-sm" placeholder="Room Number" />
                <ValidationMessage For="() => ModelRoom.RoomNumber" class="text-danger" />
            </div>
        <div class="mb-3">
            <label class="form-label">
                <InputCheckbox @bind-Value="ModelRoom.IsAvaiable" />
                 Is Availabe?
            </label>
        </div>
        <div class="mb-3">
            <button type="submit" class="btn btn-primary" style="width: 100%;">
                Save
            </button>
        </div>
    </EditForm>
</DialogCompanent>




@code {
    [Parameter]
    public int RoomTypeId { get; set; }
    private Room[] _rooms = [];
    private Room ModelRoom = new();
    private short _romTypeId = 0;

    [SupplyParameterFromQuery]
    public string Name { get; set; } = "";

    private const string DialogId ="create-room";

    private bool _showCreateRoomDialog;


    protected override async Task OnInitializedAsync()
    {
        if (RoomTypeId <= 0 || !short.TryParse(RoomTypeId.ToString(),out var roomTypeId))
        {
            NavigationManager.NavigateTo("/staff-admin/manage-room-types", replace: true);
            return;
        }
        _romTypeId = roomTypeId;
        _rooms = await RoomTypeService.GetRoomsAllAsync(roomTypeId);

    }
    public async Task CreateRoomAsync()
    {
        ModelRoom.RoomTypeId = _romTypeId;
        var result = await RoomTypeService.SaveRoomAsync(ModelRoom);
        if(result.IsSuccess)
        {
            _rooms = [.. _rooms, result.Data];
            ModelRoom = new();
            _showCreateRoomDialog = false;
            return;
        }
        await JsRuntime.InvokeVoidAsync("window.alert", result.ErrorMessage ?? "Error in save room.Please try agian! ");


    }


    private async Task HandleInheritability(Room room)
    {
        room.IsAvaiable = !room.IsAvaiable;
        var result = await RoomTypeService.SaveRoomAsync(room);
        if (!result.IsSuccess)
        {
            room.IsAvaiable = !room.IsAvaiable;
            await JsRuntime.InvokeVoidAsync("window.alert", result.ErrorMessage ?? "Error in changing room.Please try agian! ");

        }
    }
    private async Task DeleteAsnyc(int id)
    {
        var result = await RoomTypeService.DeleteRoomAsync(id);
        if(result.IsSuccess)
        {
            _rooms = _rooms.Where(x => x.Id != id && x.IsDeleted == false).ToArray();
        }
        await JsRuntime.InvokeVoidAsync("window.alert", result.ErrorMessage ?? "Error in changing room.Please try agian! ");

    }

}
