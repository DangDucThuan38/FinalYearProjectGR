@page "/staff-admin/manage-totalRevenue"
@layout AddminStaff
@using DangDucThuanFinalYear.HotelDTO.DashboardDTO
@inject IRevenueDashboardService DashboardService
<style>
    /* CSS cho màu chữ */
    #booking-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        grid-gap: 20px;
    }

        #booking-stats > * {
            background-color: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        #booking-stats h3 {
            margin-top: 0;
            font-size: 22px;
            color: #2E8B57; /* Màu xanh lá */
        }

    #room-bookings {
        list-style: none;
        padding-left: 0;
        margin-top: 15px;
    }

        #room-bookings li {
            margin-bottom: 8px;
            color: #555555;
            font-size: 18px;
        }

            #room-bookings li::before {
                content: "•";
                margin-right: 6px;
                color: #2E8B57;
            }

    #revenue-last,
    #total-revenue {
        font-weight: bold;
        font-size: 18px;
        color: #555555;
    }

    /* CSS cho màu chữ khác */
    #total-bookings,
    #revenue-last,
    #total-revenue {
        color: #007bff; /* Màu xanh lam */
    }


    /* CSS cho container chứa các ô vuông */
    #booking-stats {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between; /* Canh giữa các ô */
        gap: 20px; /* Khoảng cách giữa các ô */
    }

        /* CSS cho ô vuông */
        #booking-stats > div {
            flex: 1; /* Ô vuông co giãn theo chiều ngang */
            min-width: 200px; /* Chiều rộng tối thiểu của ô vuông */
            background-color: #ffffff; /* Màu nền */
            padding: 20px; /* Khoảng cách bên trong ô vuông */
            border-radius: 10px; /* Bo tròn các góc */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Đổ bóng */
        }

        /* CSS cho tiêu đề trong ô vuông */
        #booking-stats h3 {
            margin-top: 0;
            font-size: 18px;
            color: #2E8B57; /* Màu xanh lá */
        }

        /* CSS cho nội dung trong ô vuông */
        #booking-stats p {
            margin: 5px 0;
            font-size: 16px;
            color: #555555;
        }
</style>


<div class="dashboard-header">
    <h4><i class="icon fas fa-chart-bar" style="color:blue"></i><strong>Hotel statistical report</strong> </h4>
</div>

<div id="booking-stats" style="margin-bottom: 48px;">
    <div>
        <h3>Total Booking</h3>
        <p><strong>@((model != null ? model.TotalBooking : ""))</strong></p>
    </div>
    <div>
        <h3>Total Customer Hotel</h3>
        <p><strong>@((model != null ? model.TotalCustomer : ""))</strong></p>
    </div>
    <div>
        <h3>Total Staff Hotel</h3>
        <p><strong>@((model != null ? model.TotalStaff : ""))</strong></p>
    </div>
    <div>
        <h3>Total Room Hotel</h3>
        <p><strong>@((model != null ? model.TotalRoom : ""))</strong></p>
    </div>
</div>
<div class="dashboard-header">
    <h4><i class="icon fas fa-chart-bar" style="color:blue"></i><strong>Hotel revenue report</strong> </h4>
</div>

<div >
    <canvas id="revenueChart1" style="width: 00px; height: 250px;"></canvas>
   
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var totalProfit = @((model != null ? model.TotalRevenue : 0));
    var totalThu = @((model != null ? model.TotalThu : 0));
    var totalChi = @((model != null ? model.TotalChi : 0));

    var ctx1 = document.getElementById('revenueChart1').getContext('2d');

    var revenueChart1 = new Chart(ctx1, {
        type: 'bar',
        data: {
            labels: ['Total Profit', 'Total Expenses', 'Total Revenue'],
            datasets: [{
                label: 'Statistics',
                data: [totalProfit, totalChi, totalThu],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.7)', // Red
                    'rgba(255, 206, 86, 0.7)', // Yellow
                    'rgba(75, 192, 192, 0.7)', // Cyan
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

  
</script>

@code {
    private DashboardRespon model;
    protected override async Task OnInitializedAsync()
    {
        StateHasChanged();
        model = await DashboardService.GetRevenueDashboardAsync();
        StateHasChanged();
    }

}
