@using DangDucThuanFinalYear.HotelDTO
@using DangDucThuanFinalYear.HotelDTO.UserProFileDTO
@using Microsoft.AspNetCore.Components.QuickGrid
@* @rendermode @(new InteractiveServerRenderMode(prerender: false)) *@


@inject IUserService UserService
<div class="grid">
<QuickGrid ItemsProvider="_userProvider" Pagination="_pagination" class="table table-striped">
   @*   @if(Role != RoleType.Guest)
    {
        <PropertyColumn Property="x=> x.Id"/>
    } *@
    <PropertyColumn Property="x=> x.Name"  />
    <PropertyColumn Property="x=> x.RoleName" Title="Role"/>
    <PropertyColumn Property="x=> x.Email" />
    <PropertyColumn Property="x=> x.ContactNumber" Title="Contact Number"/>
    @if(Role != RoleType.Guest)
    {
         <PropertyColumn Property="x=> x.Designation" />
        <TemplateColumn>
                <a href="admin/manage-staff/@context.Id/edit" class="btn btn-sm btn-success">
                <i class="fa fa-edit"></i>
            </a>
        </TemplateColumn>
    }
</QuickGrid>
</div>

 <Paginator State="@_pagination" />

@code {

    [Parameter,EditorRequired]
    public RoleType Role { get; set; }

    private const int PageSize = 10;


    private GridItemsProvider<UserInformation> _userProvider;

    private PaginationState _pagination = new() { ItemsPerPage = PageSize };

    protected override  void OnInitialized()
    {
        // _users = await UserService.GetUserAsync(Role);
        _userProvider = UserProvideAsync;
    }

    private async ValueTask<GridItemsProviderResult<UserInformation>> UserProvideAsync(GridItemsProviderRequest<UserInformation> request)
    {
        var pageResult = await UserService.GetUserInformationAsnyc(request.StartIndex, request.Count ?? PageSize, Role);
        {
            return GridItemsProviderResult.From(pageResult.Records, pageResult.TotalCount);
        }
    }

}
